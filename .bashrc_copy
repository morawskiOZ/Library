# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

alias vpn-up="sudo ~/.vpn/vpn-up.sh"
alias vpn-down="sudo ~/.vpn/vpn-down.sh"
alias vpn-check="~/.vpn/vpn-check.sh"

# Piotr Morawski aliases and functions, use at your own risk

alias vpn="sudo openvpn --config ~/Dokumenty/VPN/piotr_morawski_new.ovpn"

alias branch30="git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname:short)'"
alias branch20="git for-each-ref --count=20 --sort=-committerdate refs/heads/ --format='%(refname:short)'"
alias branch10="git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format='%(refname:short)'"
alias branch="git branch | grep \* | cut -d ' ' -f2"

branch=$(git symbolic-ref --short HEAD)

alias gad="git add -A"
alias gpp="git push "
alias gss="git status "
alias gpom="git pull origin master"

alias revjson="git checkout origin/master package-lock.json"

alias fetch="git fetch --all"

alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
alias copyprivatessh='pbcopy < ~/.ssh/id_rsa'
alias copypublicssh='pbcopy < ~/.ssh/id_rsa.pub'
alias gotossh='cd ~/.ssh/'
alias nanossh='sudo nano ~/.ssh/id_rsa'

alias limangopl="cd ~/repos/shop-docker/www/limango-pl"
alias koszyk="cd ~/repos/shop-docker/www/pl-checkout"

alias scrkoszyk="/home/pmorawski/repos/shop-docker/www/pl-checkout"
alias srclimangopl="/home/pmorawski/repos/shop-docker/www/limango-pl"

alias dockerBE="docker-compose exec web-limango-backend bash"

alias checkoutyarnlock="git checkout origin/develop yarn.lock"

alias yarnreset="rm -rf node_modules; yarn"
alias dedu="yarn-deduplicate"

alias resetdev="git checkout -B develop origin/develop"
alias pulldev="git pull origin develop"

function gcm() { git commit -m "$1"; }
function gchn() { git checkout -b "$1"; }
function gch() { git checkout "$1"; }
function gpor() { git pull origin "$1"; }

function gcho() { git checkout --ours  "$1"; }
function gcht() { git checkout --theirs  "$1"; }

function push() { git push -u origin $(git symbolic-ref --short HEAD); }
function pull() { git pull origin $(git symbolic-ref --short HEAD); }

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$HOME/go/bin:$PATH"
export GOPRIVATE=git.limango.tech

function gch1() { git checkout $(branch10 | sed '1q;d' ); }
function gch2() { git checkout $(branch10 | sed '2q;d' ); }
function gch3() { git checkout $(branch10 | sed '3q;d' ); }
function gch4() { git checkout $(branch10 | sed '4q;d' ); }
function gch5() { git checkout $(branch10 | sed '5q;d' ); }
function gch6() { git checkout $(branch10 | sed '6q;d' ); }
function gch7() { git checkout $(branch10 | sed '7q;d' ); }

function ngrok() { sudo ~/user/.ngrok http "$1"; }

function cd_up() {
  cd $(printf "%0.s../" $(seq 1 $1 ));
}

alias cd..="cd_up"

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

function liup() { yarn upgrade @limango/"$1"@^; }
